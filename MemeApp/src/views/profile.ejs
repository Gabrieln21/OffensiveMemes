<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Your Profile</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      theme: {
        extend: {
          keyframes: {
            float: { '0%, 100%': { transform: 'translateY(0)' }, '50%': { transform: 'translateY(-10px)' } },
            sparkle: { '0%, 100%': { opacity: 1 }, '50%': { opacity: 0.4 } },
            neonPulse: {
              '0%, 100%': { boxShadow: '0 0 20px #ff0000, 0 0 40px #ff0000, 0 0 60px #ff0000', transform: 'scale(1)' },
              '50%': { boxShadow: '0 0 25px #ff4444, 0 0 50px #ff4444, 0 0 75px #ff4444', transform: 'scale(1.02)' }
            }
          },
          animation: {
            float: 'float 3s ease-in-out infinite',
            sparkle: 'sparkle 2s ease-in-out infinite',
            neonPulse: 'neonPulse 2s ease-in-out infinite'
          }
        }
      }
    };
  </script>
</head>
<body class="min-h-screen bg-gradient-to-br from-purple-800 via-fuchsia-900 to-black text-white font-sans">
  <a href="/" class="back-button fixed top-6 left-6 z-50 text-red-500 hover:text-red-400 font-bold text-lg uppercase tracking-wide flex items-center gap-2 bg-black/80 px-5 py-3 rounded-full border border-red-500/30 hover:border-red-500/50 transition-all duration-300 hover:-translate-x-1">
    <span class="text-2xl">‚Üê</span>
    Back
  </a>  
  <style>
    .back-button {
      text-shadow: 0 0 15px rgba(255, 0, 0, 0.4);
      box-shadow: 0 0 20px rgba(20, 20, 20, 0.8);
      backdrop-filter: blur(5px);
    }
    .back-button:hover {
      text-shadow: 0 0 25px rgba(255, 0, 0, 0.7);
    }
  </style>

  <div class="container mx-auto px-6 py-12 max-w-5xl relative z-0">
    <div class="bg-black/40 border border-white/10 rounded-3xl p-8 shadow-2xl backdrop-blur-md">
      <div class="flex items-center justify-between flex-wrap gap-6">
        <div class="flex items-center gap-6">
          <img src="<%= user.avatarUrl || '/uploads/avatars/default-avatar.png' %>" alt="Avatar" class="w-24 h-24 rounded-full border-4 border-purple-500 shadow-lg">
          <div>
            <h1 class="text-4xl font-extrabold bg-gradient-to-r from-purple-300 to-pink-400 bg-clip-text text-transparent">
              <%= user.username %>
            </h1>
            <button id="openFriendsBtn" class="text-sm text-blue-300 hover:text-blue-400 underline mt-1 block transition-all">
              üë• <%= friendCount %> friend<%= friendCount === 1 ? '' : 's' %>
            </button>            
          </div>
        </div>
        <% if (session.user && session.user.id === user.id) { %>
          <!-- Show Edit button on your own profile -->
          <a href="/profile/edit" class="inline-block bg-pink-600 hover:bg-pink-700 text-white font-semibold px-5 py-2 rounded-xl shadow-lg transition-all duration-300">
            ‚úèÔ∏è Edit Profile
          </a>
        <% } else { %>
          <!-- Show Add/Remove Friend button on other profiles -->
          <form method="POST" action="/profile/<%= isFriend ? 'remove-friend' : 'add-friend' %>">
            <input type="hidden" name="targetId" value="<%= user.id %>" />
            <button type="submit"
                    class="inline-block px-5 py-2 font-semibold rounded-xl shadow-lg transition-all duration-300
                           <%= isFriend ? 'bg-red-600 hover:bg-red-700' : 'bg-green-600 hover:bg-green-700' %> text-white">
              <%= isFriend ? '‚àí Remove Friend' : '+ Add Friend' %>
            </button>
          </form>
        <% } %>
        
      </div>

      <div class="mt-10">
        <h2 class="text-2xl font-semibold text-purple-300 mb-4">Stats</h2>
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
          <div class="bg-purple-800/40 p-4 rounded-xl border border-purple-500 shadow">
            <p class="text-sm text-purple-200">Total Games Played</p>
            <p class="text-2xl font-bold text-white"><%= stats.gamesPlayed %></p>
          </div>
          <div class="bg-purple-800/40 p-4 rounded-xl border border-purple-500 shadow">
            <p class="text-sm text-purple-200">Total Wins</p>
            <p class="text-2xl font-bold text-white"><%= stats.wins %></p>
          </div>
          <div class="bg-purple-800/40 p-4 rounded-xl border border-purple-500 shadow">
            <p class="text-sm text-purple-200">Meme Likes Received</p>
            <p class="text-2xl font-bold text-white"><%= stats.likes %></p>
          </div>
          <div class="bg-purple-800/40 p-4 rounded-xl border border-purple-500 shadow">
            <p class="text-sm text-purple-200">Average Score</p>
            <p class="text-2xl font-bold text-white"><%= stats.avgScore.toFixed(2) %></p>
          </div>
        </div>
      </div>

      <div class="mt-10">
        <h2 class="text-2xl font-semibold text-purple-300 mb-4">‚≠ê Starred Memes</h2>
        <div id="starredMemes" class="grid grid-cols-1 sm:grid-cols-2 gap-6">
          <% starredMemes.forEach(meme => { %>
            <div class="cursor-pointer group relative" data-meme='<%- JSON.stringify(meme) %>' onclick="openMemeModal(this)">
              <img src="<%= meme.image_url %>" alt="Starred Meme"
                   class="rounded-xl w-full aspect-square object-cover shadow-md hover:scale-105 transition-transform duration-300" />
              <div class="absolute bottom-2 left-2 text-xs bg-black/60 px-2 py-1 rounded text-white">
                ‚ù§Ô∏è <%= meme.likes %>
              </div>
            </div>
          <% }) %>
        </div>

        <!-- Meme Modal -->
        <div id="memeModal" class="fixed inset-0 bg-black/80 backdrop-blur-md z-50 hidden flex items-center justify-center p-6">
          <div class="bg-gray-900 max-w-5xl w-full rounded-xl shadow-2xl relative overflow-hidden flex flex-col sm:flex-row gap-4 p-6">
            <button onclick="closeMemeModal()" class="absolute top-4 right-4 text-white text-xl">‚úñ</button>
            <div class="flex-1">
              <img id="modalMemeImage" src="" class="rounded-xl w-full max-h-[75vh] object-contain" />
              <form method="POST" action="/profile/like" class="flex items-center gap-3 mt-4">
                <input type="hidden" name="memeId" id="modalMemeIdForLike" />
                <button type="submit" class="text-pink-400 hover:text-pink-600 text-lg">‚ù§Ô∏è Like</button>
                <span id="modalMemeLikes" class="text-purple-200 text-sm"></span>
              </form>
            </div>
            <div class="w-full sm:w-80 space-y-3">
              <h3 class="text-xl font-bold text-purple-300">üí¨ Comments</h3>
              <div id="modalComments" class="space-y-2 max-h-[300px] overflow-y-auto pr-2"></div>
              <form method="POST" action="/profile/comment" class="mt-2 flex flex-col gap-2">
                <input type="hidden" name="memeId" id="modalMemeIdForComment" />
                <input name="content" type="text" placeholder="Add a comment..." required
                       class="w-full px-3 py-2 rounded bg-black/40 border border-purple-600/30 text-white placeholder-purple-300" />
                <button type="submit" class="bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg">üí¨ Comment</button>
              </form>
            </div>
          </div>
        </div>

        <!-- Friends Modal -->
        <div id="friendsModal" class="fixed inset-0 bg-black/80 backdrop-blur-sm z-50 hidden items-center justify-center p-6">
          <div class="bg-gray-900 max-w-md w-full rounded-xl p-6 shadow-2xl relative">
            <button onclick="closeFriendsModal()" class="absolute top-3 right-3 text-white text-xl">‚úñ</button>
            <h2 class="text-xl text-purple-300 mb-4">Your Friends</h2>
            <input id="friendSearch" type="text" placeholder="Search..." class="w-full mb-3 px-3 py-2 rounded bg-black/40 text-white border border-purple-600/30" />
            <div id="friendListContainer" class="space-y-3 max-h-96 overflow-y-auto"></div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <script>
    function openMemeModal(element) {
      const meme = JSON.parse(element.dataset.meme);
      document.getElementById('modalMemeImage').src = meme.image_url;
      document.getElementById('modalMemeIdForLike').value = meme.id;
      document.getElementById('modalMemeIdForComment').value = meme.id;
      document.getElementById('modalMemeLikes').innerText = `${meme.likes} like${meme.likes === 1 ? '' : 's'}`;
      const commentsContainer = document.getElementById('modalComments');
      commentsContainer.innerHTML = '';
      (meme.comments || []).forEach(comment => {
        const div = document.createElement('div');
        div.className = 'bg-black/30 border border-white/10 rounded-lg p-2 text-sm text-purple-100';
        div.innerHTML = `<strong>User #${comment.user_id}:</strong> ${comment.content}`;
        commentsContainer.appendChild(div);
      });
      document.getElementById('memeModal').classList.remove('hidden');
    }
  
    function closeMemeModal() {
      document.getElementById('memeModal').classList.add('hidden');
    }
  
    async function openFriendsModal() {
      console.log("üß† openFriendsModal() triggered");
  
      document.getElementById('friendsModal').classList.remove('hidden');
      const res = await fetch('/friends/api');
      console.log("üß† openFriendsModal() triggered 2");
      const data = await res.json();
      console.log("Fetched friends:", data.friends);
  
      const container = document.getElementById('friendListContainer');
      const search = document.getElementById('friendSearch');
  
      function renderList(friends) {
        container.innerHTML = '';
        friends.forEach(friend => {
          const wrapper = document.createElement('div');
          wrapper.className = 'flex justify-between items-center bg-black/30 p-3 rounded-md';

          const info = document.createElement('div');
          info.className = 'flex items-center gap-3';

          const avatar = document.createElement('img');
          avatar.src = friend.avatar_url || '/uploads/avatars/default-avatar.png';
          avatar.alt = `${friend.username}'s avatar`;
          avatar.className = 'w-10 h-10 rounded-full border border-purple-500 object-cover';

          const nameLink = document.createElement('a');
          nameLink.href = `/profile/${friend.id}`;
          nameLink.className = 'text-purple-200 hover:underline font-semibold';
          nameLink.textContent = friend.username;

          info.appendChild(avatar);
          info.appendChild(nameLink);

          const btn = document.createElement('button');
          btn.className = `px-3 py-1 text-sm rounded font-medium transition`;
          btn.innerText = friend.is_friend ? '‚àí Remove' : '+ Add';
          const colorClasses = friend.is_friend
            ? ['bg-red-500', 'hover:bg-red-600']
            : ['bg-green-500', 'hover:bg-green-600'];
          btn.classList.add(...colorClasses);

          btn.onclick = async () => {
            const route = friend.is_friend ? '/profile/remove-friend' : '/profile/add-friend';
            const res = await fetch(route, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ targetId: friend.id })
            });
            if (res.ok) {
              btn.innerText = friend.is_friend ? '+ Add' : '‚àí Remove';
              btn.classList.toggle('bg-red-500');
              btn.classList.toggle('hover:bg-red-600');
              btn.classList.toggle('bg-green-500');
              btn.classList.toggle('hover:bg-green-600');
              friend.is_friend = !friend.is_friend;
            }
          };

          wrapper.appendChild(info);
          wrapper.appendChild(btn);
          container.appendChild(wrapper);
        });
      }

  
      renderList(data.friends);
      search.oninput = () => {
        const q = search.value.toLowerCase();
        renderList(data.friends.filter(friend => friend.username.toLowerCase().includes(q)));
      };
    }
  
    function closeFriendsModal() {
      document.getElementById('friendsModal').classList.add('hidden');
    }
  
    // ‚úÖ Assign click listeners now that DOM is ready
    window.openFriendsModal = openFriendsModal;
    window.closeFriendsModal = closeFriendsModal;
  
    const openBtn = document.getElementById('openFriendsBtn');
    if (openBtn) openBtn.addEventListener('click', openFriendsModal);
  </script>
  </body>
  
</body>
</html>
